package decomp

import (
	"testing"
)

var tt = []struct {
	name string
	i    int
	o    string
}{
	{
		"Five",
		5,
		"2^3 * 3 * 5",
	},
	{
		"Seventeen",
		17,
		"2^15 * 3^6 * 5^3 * 7^2 * 11 * 13 * 17",
	},
	{
		"Twent-Five",
		25,
		"2^22 * 3^10 * 5^6 * 7^3 * 11^2 * 13 * 17 * 19 * 23",
	},
	{
		"OVER NINE THOUSAND",
		9001,
		"2^8995 * 3^4498 * 5^2248 * 7^1497 * 11^898 * 13^749 * 17^561 * 19^498 * 23^408 * 29^320 * 31^299 * 37^249 * 41^224 * 43^213 * 47^195 * 53^172 * 59^154 * 61^149 * 67^136 * 71^127 * 73^124 * 79^114 * 83^109 * 89^102 * 97^92 * 101^89 * 103^87 * 107^84 * 109^82 * 113^79 * 127^70 * 131^68 * 137^65 * 139^64 * 149^60 * 151^59 * 157^57 * 163^55 * 167^53 * 173^52 * 179^50 * 181^49 * 191^47 * 193^46 * 197^45 * 199^45 * 211^42 * 223^40 * 227^39 * 229^39 * 233^38 * 239^37 * 241^37 * 251^35 * 257^35 * 263^34 * 269^33 * 271^33 * 277^32 * 281^32 * 283^31 * 293^30 * 307^29 * 311^28 * 313^28 * 317^28 * 331^27 * 337^26 * 347^25 * 349^25 * 353^25 * 359^25 * 367^24 * 373^24 * 379^23 * 383^23 * 389^23 * 397^22 * 401^22 * 409^22 * 419^21 * 421^21 * 431^20 * 433^20 * 439^20 * 443^20 * 449^20 * 457^19 * 461^19 * 463^19 * 467^19 * 479^18 * 487^18 * 491^18 * 499^18 * 503^17 * 509^17 * 521^17 * 523^17 * 541^16 * 547^16 * 557^16 * 563^15 * 569^15 * 571^15 * 577^15 * 587^15 * 593^15 * 599^15 * 601^14 * 607^14 * 613^14 * 617^14 * 619^14 * 631^14 * 641^14 * 643^13 * 647^13 * 653^13 * 659^13 * 661^13 * 673^13 * 677^13 * 683^13 * 691^13 * 701^12 * 709^12 * 719^12 * 727^12 * 733^12 * 739^12 * 743^12 * 751^11 * 757^11 * 761^11 * 769^11 * 773^11 * 787^11 * 797^11 * 809^11 * 811^11 * 821^10 * 823^10 * 827^10 * 829^10 * 839^10 * 853^10 * 857^10 * 859^10 * 863^10 * 877^10 * 881^10 * 883^10 * 887^10 * 907^9 * 911^9 * 919^9 * 929^9 * 937^9 * 941^9 * 947^9 * 953^9 * 967^9 * 971^9 * 977^9 * 983^9 * 991^9 * 997^9 * 1009^8 * 1013^8 * 1019^8 * 1021^8 * 1031^8 * 1033^8 * 1039^8 * 1049^8 * 1051^8 * 1061^8 * 1063^8 * 1069^8 * 1087^8 * 1091^8 * 1093^8 * 1097^8 * 1103^8 * 1109^8 * 1117^8 * 1123^8 * 1129^7 * 1151^7 * 1153^7 * 1163^7 * 1171^7 * 1181^7 * 1187^7 * 1193^7 * 1201^7 * 1213^7 * 1217^7 * 1223^7 * 1229^7 * 1231^7 * 1237^7 * 1249^7 * 1259^7 * 1277^7 * 1279^7 * 1283^7 * 1289^6 * 1291^6 * 1297^6 * 1301^6 * 1303^6 * 1307^6 * 1319^6 * 1321^6 * 1327^6 * 1361^6 * 1367^6 * 1373^6 * 1381^6 * 1399^6 * 1409^6 * 1423^6 * 1427^6 * 1429^6 * 1433^6 * 1439^6 * 1447^6 * 1451^6 * 1453^6 * 1459^6 * 1471^6 * 1481^6 * 1483^6 * 1487^6 * 1489^6 * 1493^6 * 1499^6 * 1511^5 * 1523^5 * 1531^5 * 1543^5 * 1549^5 * 1553^5 * 1559^5 * 1567^5 * 1571^5 * 1579^5 * 1583^5 * 1597^5 * 1601^5 * 1607^5 * 1609^5 * 1613^5 * 1619^5 * 1621^5 * 1627^5 * 1637^5 * 1657^5 * 1663^5 * 1667^5 * 1669^5 * 1693^5 * 1697^5 * 1699^5 * 1709^5 * 1721^5 * 1723^5 * 1733^5 * 1741^5 * 1747^5 * 1753^5 * 1759^5 * 1777^5 * 1783^5 * 1787^5 * 1789^5 * 1801^4 * 1811^4 * 1823^4 * 1831^4 * 1847^4 * 1861^4 * 1867^4 * 1871^4 * 1873^4 * 1877^4 * 1879^4 * 1889^4 * 1901^4 * 1907^4 * 1913^4 * 1931^4 * 1933^4 * 1949^4 * 1951^4 * 1973^4 * 1979^4 * 1987^4 * 1993^4 * 1997^4 * 1999^4 * 2003^4 * 2011^4 * 2017^4 * 2027^4 * 2029^4 * 2039^4 * 2053^4 * 2063^4 * 2069^4 * 2081^4 * 2083^4 * 2087^4 * 2089^4 * 2099^4 * 2111^4 * 2113^4 * 2129^4 * 2131^4 * 2137^4 * 2141^4 * 2143^4 * 2153^4 * 2161^4 * 2179^4 * 2203^4 * 2207^4 * 2213^4 * 2221^4 * 2237^4 * 2239^4 * 2243^4 * 2251^3 * 2267^3 * 2269^3 * 2273^3 * 2281^3 * 2287^3 * 2293^3 * 2297^3 * 2309^3 * 2311^3 * 2333^3 * 2339^3 * 2341^3 * 2347^3 * 2351^3 * 2357^3 * 2371^3 * 2377^3 * 2381^3 * 2383^3 * 2389^3 * 2393^3 * 2399^3 * 2411^3 * 2417^3 * 2423^3 * 2437^3 * 2441^3 * 2447^3 * 2459^3 * 2467^3 * 2473^3 * 2477^3 * 2503^3 * 2521^3 * 2531^3 * 2539^3 * 2543^3 * 2549^3 * 2551^3 * 2557^3 * 2579^3 * 2591^3 * 2593^3 * 2609^3 * 2617^3 * 2621^3 * 2633^3 * 2647^3 * 2657^3 * 2659^3 * 2663^3 * 2671^3 * 2677^3 * 2683^3 * 2687^3 * 2689^3 * 2693^3 * 2699^3 * 2707^3 * 2711^3 * 2713^3 * 2719^3 * 2729^3 * 2731^3 * 2741^3 * 2749^3 * 2753^3 * 2767^3 * 2777^3 * 2789^3 * 2791^3 * 2797^3 * 2801^3 * 2803^3 * 2819^3 * 2833^3 * 2837^3 * 2843^3 * 2851^3 * 2857^3 * 2861^3 * 2879^3 * 2887^3 * 2897^3 * 2903^3 * 2909^3 * 2917^3 * 2927^3 * 2939^3 * 2953^3 * 2957^3 * 2963^3 * 2969^3 * 2971^3 * 2999^3 * 3001^2 * 3011^2 * 3019^2 * 3023^2 * 3037^2 * 3041^2 * 3049^2 * 3061^2 * 3067^2 * 3079^2 * 3083^2 * 3089^2 * 3109^2 * 3119^2 * 3121^2 * 3137^2 * 3163^2 * 3167^2 * 3169^2 * 3181^2 * 3187^2 * 3191^2 * 3203^2 * 3209^2 * 3217^2 * 3221^2 * 3229^2 * 3251^2 * 3253^2 * 3257^2 * 3259^2 * 3271^2 * 3299^2 * 3301^2 * 3307^2 * 3313^2 * 3319^2 * 3323^2 * 3329^2 * 3331^2 * 3343^2 * 3347^2 * 3359^2 * 3361^2 * 3371^2 * 3373^2 * 3389^2 * 3391^2 * 3407^2 * 3413^2 * 3433^2 * 3449^2 * 3457^2 * 3461^2 * 3463^2 * 3467^2 * 3469^2 * 3491^2 * 3499^2 * 3511^2 * 3517^2 * 3527^2 * 3529^2 * 3533^2 * 3539^2 * 3541^2 * 3547^2 * 3557^2 * 3559^2 * 3571^2 * 3581^2 * 3583^2 * 3593^2 * 3607^2 * 3613^2 * 3617^2 * 3623^2 * 3631^2 * 3637^2 * 3643^2 * 3659^2 * 3671^2 * 3673^2 * 3677^2 * 3691^2 * 3697^2 * 3701^2 * 3709^2 * 3719^2 * 3727^2 * 3733^2 * 3739^2 * 3761^2 * 3767^2 * 3769^2 * 3779^2 * 3793^2 * 3797^2 * 3803^2 * 3821^2 * 3823^2 * 3833^2 * 3847^2 * 3851^2 * 3853^2 * 3863^2 * 3877^2 * 3881^2 * 3889^2 * 3907^2 * 3911^2 * 3917^2 * 3919^2 * 3923^2 * 3929^2 * 3931^2 * 3943^2 * 3947^2 * 3967^2 * 3989^2 * 4001^2 * 4003^2 * 4007^2 * 4013^2 * 4019^2 * 4021^2 * 4027^2 * 4049^2 * 4051^2 * 4057^2 * 4073^2 * 4079^2 * 4091^2 * 4093^2 * 4099^2 * 4111^2 * 4127^2 * 4129^2 * 4133^2 * 4139^2 * 4153^2 * 4157^2 * 4159^2 * 4177^2 * 4201^2 * 4211^2 * 4217^2 * 4219^2 * 4229^2 * 4231^2 * 4241^2 * 4243^2 * 4253^2 * 4259^2 * 4261^2 * 4271^2 * 4273^2 * 4283^2 * 4289^2 * 4297^2 * 4327^2 * 4337^2 * 4339^2 * 4349^2 * 4357^2 * 4363^2 * 4373^2 * 4391^2 * 4397^2 * 4409^2 * 4421^2 * 4423^2 * 4441^2 * 4447^2 * 4451^2 * 4457^2 * 4463^2 * 4481^2 * 4483^2 * 4493^2 * 4507 * 4513 * 4517 * 4519 * 4523 * 4547 * 4549 * 4561 * 4567 * 4583 * 4591 * 4597 * 4603 * 4621 * 4637 * 4639 * 4643 * 4649 * 4651 * 4657 * 4663 * 4673 * 4679 * 4691 * 4703 * 4721 * 4723 * 4729 * 4733 * 4751 * 4759 * 4783 * 4787 * 4789 * 4793 * 4799 * 4801 * 4813 * 4817 * 4831 * 4861 * 4871 * 4877 * 4889 * 4903 * 4909 * 4919 * 4931 * 4933 * 4937 * 4943 * 4951 * 4957 * 4967 * 4969 * 4973 * 4987 * 4993 * 4999 * 5003 * 5009 * 5011 * 5021 * 5023 * 5039 * 5051 * 5059 * 5077 * 5081 * 5087 * 5099 * 5101 * 5107 * 5113 * 5119 * 5147 * 5153 * 5167 * 5171 * 5179 * 5189 * 5197 * 5209 * 5227 * 5231 * 5233 * 5237 * 5261 * 5273 * 5279 * 5281 * 5297 * 5303 * 5309 * 5323 * 5333 * 5347 * 5351 * 5381 * 5387 * 5393 * 5399 * 5407 * 5413 * 5417 * 5419 * 5431 * 5437 * 5441 * 5443 * 5449 * 5471 * 5477 * 5479 * 5483 * 5501 * 5503 * 5507 * 5519 * 5521 * 5527 * 5531 * 5557 * 5563 * 5569 * 5573 * 5581 * 5591 * 5623 * 5639 * 5641 * 5647 * 5651 * 5653 * 5657 * 5659 * 5669 * 5683 * 5689 * 5693 * 5701 * 5711 * 5717 * 5737 * 5741 * 5743 * 5749 * 5779 * 5783 * 5791 * 5801 * 5807 * 5813 * 5821 * 5827 * 5839 * 5843 * 5849 * 5851 * 5857 * 5861 * 5867 * 5869 * 5879 * 5881 * 5897 * 5903 * 5923 * 5927 * 5939 * 5953 * 5981 * 5987 * 6007 * 6011 * 6029 * 6037 * 6043 * 6047 * 6053 * 6067 * 6073 * 6079 * 6089 * 6091 * 6101 * 6113 * 6121 * 6131 * 6133 * 6143 * 6151 * 6163 * 6173 * 6197 * 6199 * 6203 * 6211 * 6217 * 6221 * 6229 * 6247 * 6257 * 6263 * 6269 * 6271 * 6277 * 6287 * 6299 * 6301 * 6311 * 6317 * 6323 * 6329 * 6337 * 6343 * 6353 * 6359 * 6361 * 6367 * 6373 * 6379 * 6389 * 6397 * 6421 * 6427 * 6449 * 6451 * 6469 * 6473 * 6481 * 6491 * 6521 * 6529 * 6547 * 6551 * 6553 * 6563 * 6569 * 6571 * 6577 * 6581 * 6599 * 6607 * 6619 * 6637 * 6653 * 6659 * 6661 * 6673 * 6679 * 6689 * 6691 * 6701 * 6703 * 6709 * 6719 * 6733 * 6737 * 6761 * 6763 * 6779 * 6781 * 6791 * 6793 * 6803 * 6823 * 6827 * 6829 * 6833 * 6841 * 6857 * 6863 * 6869 * 6871 * 6883 * 6899 * 6907 * 6911 * 6917 * 6947 * 6949 * 6959 * 6961 * 6967 * 6971 * 6977 * 6983 * 6991 * 6997 * 7001 * 7013 * 7019 * 7027 * 7039 * 7043 * 7057 * 7069 * 7079 * 7103 * 7109 * 7121 * 7127 * 7129 * 7151 * 7159 * 7177 * 7187 * 7193 * 7207 * 7211 * 7213 * 7219 * 7229 * 7237 * 7243 * 7247 * 7253 * 7283 * 7297 * 7307 * 7309 * 7321 * 7331 * 7333 * 7349 * 7351 * 7369 * 7393 * 7411 * 7417 * 7433 * 7451 * 7457 * 7459 * 7477 * 7481 * 7487 * 7489 * 7499 * 7507 * 7517 * 7523 * 7529 * 7537 * 7541 * 7547 * 7549 * 7559 * 7561 * 7573 * 7577 * 7583 * 7589 * 7591 * 7603 * 7607 * 7621 * 7639 * 7643 * 7649 * 7669 * 7673 * 7681 * 7687 * 7691 * 7699 * 7703 * 7717 * 7723 * 7727 * 7741 * 7753 * 7757 * 7759 * 7789 * 7793 * 7817 * 7823 * 7829 * 7841 * 7853 * 7867 * 7873 * 7877 * 7879 * 7883 * 7901 * 7907 * 7919 * 7927 * 7933 * 7937 * 7949 * 7951 * 7963 * 7993 * 8009 * 8011 * 8017 * 8039 * 8053 * 8059 * 8069 * 8081 * 8087 * 8089 * 8093 * 8101 * 8111 * 8117 * 8123 * 8147 * 8161 * 8167 * 8171 * 8179 * 8191 * 8209 * 8219 * 8221 * 8231 * 8233 * 8237 * 8243 * 8263 * 8269 * 8273 * 8287 * 8291 * 8293 * 8297 * 8311 * 8317 * 8329 * 8353 * 8363 * 8369 * 8377 * 8387 * 8389 * 8419 * 8423 * 8429 * 8431 * 8443 * 8447 * 8461 * 8467 * 8501 * 8513 * 8521 * 8527 * 8537 * 8539 * 8543 * 8563 * 8573 * 8581 * 8597 * 8599 * 8609 * 8623 * 8627 * 8629 * 8641 * 8647 * 8663 * 8669 * 8677 * 8681 * 8689 * 8693 * 8699 * 8707 * 8713 * 8719 * 8731 * 8737 * 8741 * 8747 * 8753 * 8761 * 8779 * 8783 * 8803 * 8807 * 8819 * 8821 * 8831 * 8837 * 8839 * 8849 * 8861 * 8863 * 8867 * 8887 * 8893 * 8923 * 8929 * 8933 * 8941 * 8951 * 8963 * 8969 * 8971 * 8999 * 9001",
	},
}

func TestDecomp(t *testing.T) {

	for _, tc := range tt {
		t.Run(tc.name, func(t *testing.T) {
			r := decomp(tc.i)
			if r != tc.o {
				t.Fatalf("expected '%v', got '%v'", tc.o, r)
			}
		})
	}
}

func BenchmarkDecomp(b *testing.B) {
	for _, tc := range tt {
		for i := 0; i < b.N; i++ {
			_ = decomp(tc.i)
		}
	}
}
